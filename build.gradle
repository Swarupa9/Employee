plugins {
	id 'java'
    id 'scala'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'	
	id 'io.gatling.gradle' version '3.9.2' 

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.hibernate:hibernate-core:6.1.7.Final'
	// Spring Boot Test (includes Spring Test, JUnit, AssertJ, Hamcrest, etc.)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//Junit5 & Mockito
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
	testImplementation 'org.mockito:mockito-core:4.8.1'
	//MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //Cucumber
    testImplementation 'io.cucumber:cucumber-java:7.14.0'
    testImplementation 'io.cucumber:cucumber-spring:7.14.0'
    testImplementation 'io.cucumber:cucumber-junit:7.14.0'
    
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.10.0' // For JUnit 4 runner
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.14.0'
    
    implementation 'org.eclipse.persistence:eclipselink:4.0.4'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.moxy:4.0.4'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0'
    // Implementation of Jakarta JSON API
    implementation 'org.glassfish:jakarta.json:2.0.1'
    
    // Gatling Dependencies
    testImplementation 'io.gatling.highcharts:gatling-charts-highcharts:3.9.2'
    testImplementation 'io.gatling:gatling-core:3.9.2'
    testImplementation 'io.gatling:gatling-http:3.9.2' 
    
    // Scala library
    implementation 'org.scala-lang:scala-library:2.13.8'
    
    //Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    // CSV File Handling
    implementation 'org.springframework.batch:spring-batch-core'
    implementation 'org.apache.commons:commons-csv:1.11.0'
    
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    
}

tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += '-Amapstruct.defaultComponentModel=spring'
    options.compilerArgs += '-parameters'
}

gatling {
    logLevel = 'DEBUG'
}

sourceSets {
    test {
        java.srcDirs += 'src/test/java'
    }
}

sourceSets {
    main.java.srcDirs += 'build/generated/sources/annotationProcessor/java/main'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}
